% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateBGreport.R
\name{generateBGreport}
\alias{generateBGreport}
\title{generateBGreport}
\usage{
generateBGreport(libraryPath, filePath, outPath = NA, outFileName = NA,
  fromChange = TRUE, numberDays = NA, startDate = NA, endDate = NA,
  removeDates = NA, data)
}
\arguments{
\item{libraryPath}{character string path to BG.library code}

\item{filePath}{character path to csv import file}

\item{outPath}{character string indicating the directory in which to save the
BG_report.  If not specified report will be saved to "./BG.library/reports/BG_report.html}

\item{outFileName}{character string to apply to BG_report file name.  If not specified
report will be saved to "./BG.library/reports/BG_report.html}

\item{fromChange}{TRUE/FALSE indicates whether data should be subset with the ealiest date
as the most recent pump settings change.  This setting overrides all other date subsetting
parameters, and must be set to \code{FALSE} to apply other parameter settings (i.e. \code{numberDays},
\code{startDate}, and \code{endDate})}

\item{numberDays}{numeric value indicating number of days of data to include.  This parameter will
override \code{startDate} and \code{endDate} unless it is set to NA.  The \code{fromChange} parameter will override
all other parameters that subset the data by date.}

\item{startDate}{Earliest date included in data.  This setting will only be applied
if \code{numberDays = NA} and \code{fromChange = FALSE}}

\item{endDate}{Latest date included in data.  This setting will only be applied
if \code{numberDays = NA} and \code{fromChange = FALSE}}

\item{removeDates}{character vector of dates in format %Y-%m-%d to remove from data}

\item{data}{data.frame to be used to generate tables and plots}
}
\description{
Generate BG_report in html format for specific date range.  BG_report
includes commonly used tables and interactive plots.\cr \cr
}
\examples{
libraryPath<-"F:/BG.library_github/BG.library/"
filePath<-"F:/BG.library_github/exampleData.csv"
dataImport.list<-dataImport(filePath,libraryPath)
data<-dataImport.list$allData
generateBGreport(libraryPath, filePath, data = data)
}
